@page "/"

@using Microsoft.AspNetCore.SignalR.Client
@using System.ComponentModel.DataAnnotations

@inject NavigationManager NavigationManager

<h3>Chat</h3>
<EditForm Model="newchatmessage" OnValidSubmit="SendMessage">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Name</label>
        <InputText class="form-control" @bind-Value="newchatmessage.Name">
        </InputText>
    </div>

    <div class="form-group">
        <label>Message</label>
        <InputText class="form-control" @bind-Value="newchatmessage.Message">
        </InputText>
    </div>

    <button type="submit">Send Message</button>
</EditForm>
<ul>
    <Virtualize Items="Messages.OrderByDescending(m => m.Date).ToList()" Context="message">
        <li>@message.Name says @message.Message </li>
    </Virtualize>
</ul>


@code {


    List<ChatMessage> Messages = new();
    HubConnection hubConnection;
    ChatMessage newchatmessage = new();


    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
       .WithUrl(NavigationManager.BaseUri + "hubs/chathub")
       .Build();

        hubConnection.On<string, string>("SendMessage", (name, message) =>
        {
            var chatmessage = new ChatMessage() { Name = name, Message = message, Date = DateTime.Now };
            Messages.Add(chatmessage);
            StateHasChanged();
        });

        await hubConnection.StartAsync();

    }

    public class ChatMessage
    {
        [Required]
        public string Name { get; set; }
        [Required]
        public string Message { get; set; }
        public DateTime Date { get; set; }

    }

    public async Task SendMessage()
    {
        await hubConnection.SendAsync("SendMessage", newchatmessage.Name,
          newchatmessage.Message);
        newchatmessage.Message = "";
    }


}
